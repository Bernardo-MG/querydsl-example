<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <!-- ********************************************** -->
   <!-- ****************** BASE POM ****************** -->
   <!-- ********************************************** -->

   <parent>
      <groupId>com.bernardomg.example</groupId>
      <artifactId>querydsl-example</artifactId>
      <version>1.2.0-SNAPSHOT</version>
   </parent>

   <!-- ********************************************** -->
   <!-- **************** PROJECT INFO **************** -->
   <!-- ********************************************** -->

   <artifactId>mongo</artifactId>
   <packaging>jar</packaging>

   <name>Querydsl Example - Mongo</name>
   <description>An example showing how to use Querydsl</description>

   <!-- ********************************************** -->
   <!-- ****************** PROFILES ****************** -->
   <!-- ********************************************** -->

   <profiles>
      <!-- ============================================== -->
      <!-- ============= DATABASE PROFILES ============== -->
      <!-- ============================================== -->
      <profile>
         <!-- Default database profile -->
         <!-- Required when the tests are disabled -->
         <id>default</id>
         <properties>
            <!-- Access data -->
            <database.uri>mongodb://username:password@localhost:27017/testdb</database.uri>
            <database.name>testdb</database.name>
            <!-- Spring context -->
            <spring.profile.database>mongo</spring.profile.database>
         </properties>
      </profile>
      <profile>
         <!-- Mongo database profile -->
         <!-- Prepares the project to make use of a Mongo in-memory database -->
         <id>mongo</id>
         <properties>
            <!-- Access data -->
            <database.uri>mongodb://username:password@localhost:27017/testdb</database.uri>
            <database.name>testdb</database.name>
            <!-- Spring context -->
            <spring.profile.database>mongo</spring.profile.database>
         </properties>
      </profile>
   </profiles>

   <!-- ********************************************** -->
   <!-- **************** PROPERTIES ****************** -->
   <!-- ********************************************** -->

   <properties>
      <!-- ============================================== -->
      <!-- =============== MANIFEST DATA ================ -->
      <!-- ============================================== -->
      <manifest.name>com/bernardomg/example/querydsl/mongo</manifest.name>
      <!-- ============================================== -->
      <!-- =========== DEPENDENCIES VERSIONS ============ -->
      <!-- ============================================== -->
      <junit.jupiter.version>5.8.0</junit.jupiter.version>
      <log4j.version>2.14.1</log4j.version>
      <mongo.embedded.version>3.0.0</mongo.embedded.version>
      <mongo.version>4.0.5</mongo.version>
      <querydsl.version>5.0.0</querydsl.version>
      <slf4j.version>2.0.0-alpha5</slf4j.version>
      <spring.data.version>3.0.3.RELEASE</spring.data.version>
      <spring.version>5.3.10</spring.version>
      <!-- ============================================== -->
      <!-- ============== PLUGINS VERSIONS ============== -->
      <!-- ============================================== -->
      <plugin.processor.version>4.5</plugin.processor.version>
      <!-- ============================================== -->
      <!-- ================= MAVEN SITE ================= -->
      <!-- ============================================== -->
      <site.skin.version>2.2.4</site.skin.version>
   </properties>

   <!-- ********************************************** -->
   <!-- *************** DEPENDENCIES ***************** -->
   <!-- ********************************************** -->

   <dependencyManagement>
      <dependencies>
         <dependency>
            <!-- JUnit BOM -->
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>${junit.jupiter.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <!-- Spring Framework BOM -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-framework-bom</artifactId>
            <version>${spring.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <!-- ============================================== -->
      <!-- =================== SPRING =================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Spring Data Mongo DB -->
         <groupId>org.springframework.data</groupId>
         <artifactId>spring-data-mongodb</artifactId>
         <version>${spring.data.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================== QUERYDSL ================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Querydsl Core -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-core</artifactId>
         <version>${querydsl.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ================== MONGO ================== -->
      <!-- ============================================== -->
      <dependency>
         <!-- Embedded Mongo -->
         <groupId>de.flapdoodle.embed</groupId>
         <artifactId>de.flapdoodle.embed.mongo</artifactId>
         <version>${mongo.embedded.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Mongo Driver Core -->
         <groupId>org.mongodb</groupId>
         <artifactId>mongodb-driver-core</artifactId>
         <version>${mongo.version}</version>
      </dependency>
      <dependency>
         <!-- Mongo Driver Sync -->
         <groupId>org.mongodb</groupId>
         <artifactId>mongodb-driver-sync</artifactId>
         <version>${mongo.version}</version>
      </dependency>
      <!-- ============================================== -->
      <!-- ======= TEST ENVIRONMENT DEPENDENCIES ======== -->
      <!-- ============================================== -->
      <dependency>
         <!-- JUnit Jupiter Engine -->
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- JUnit Jupiter Platform -->
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-runner</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <!-- JUnit 3 -->
               <groupId>junit</groupId>
               <artifactId>junit</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <!-- Spring AOP -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-aop</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Beans -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Framework Context -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring ORM -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-orm</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Test -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-test</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Spring Transactions -->
         <groupId>org.springframework</groupId>
         <artifactId>spring-tx</artifactId>
         <scope>test</scope>
      </dependency>
      <!-- ********************************************** -->
      <!-- ****************** QUERYDSL ****************** -->
      <!-- ********************************************** -->
      <dependency>
         <!-- Querydsl Spring -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-sql-spring</artifactId>
         <version>${querydsl.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Querydsl APT -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-apt</artifactId>
         <version>${querydsl.version}</version>
      </dependency>
      <dependency>
         <!-- Querydsl Mongo -->
         <groupId>com.querydsl</groupId>
         <artifactId>querydsl-mongodb</artifactId>
         <version>${querydsl.version}</version>
      </dependency>
      <!-- ********************************************** -->
      <!-- ****************** LOGGERS ******************* -->
      <!-- ********************************************** -->
      <dependency>
         <!-- SLF4J API -->
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Log4j SLF4J Bridge -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <!-- Log4j core -->
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <!-- ********************************************** -->
   <!-- ******************* BUILD ******************** -->
   <!-- ********************************************** -->

   <build>
      <defaultGoal>clean package</defaultGoal>
      <testResources>
         <testResource>
            <directory>src/test/resources/</directory>
         </testResource>
         <testResource>
            <!-- Test resources -->
            <directory>src/test/resources/</directory>
            <includes>
               <!-- Filter the contexts -->
               <include>context/**/*.xml</include>
               <!-- Filter the properties -->
               <include>config/**/*.properties</include>
            </includes>
            <filtering>true</filtering>
         </testResource>
      </testResources>
      <plugins>
         <plugin>
            <!-- Changes -->
            <!-- Takes care of the changes log -->
            <!-- It is set to also validate the changes log file -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-changes-plugin</artifactId>
            <executions>
               <!-- Changes plugin is bound to the pre-site phase -->
               <execution>
                  <id>check-changes</id>
                  <phase>pre-site</phase>
                  <goals>
                     <goal>changes-check</goal>
                  </goals>
               </execution>
               <execution>
                  <id>validate-changes</id>
                  <phase>pre-site</phase>
                  <goals>
                     <goal>changes-validate</goal>
                  </goals>
                  <configuration>
                     <failOnError>true</failOnError>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Site -->
            <!-- Generates the Maven Site -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <dependencies>
               <dependency>
                  <!-- Docs Maven Skin -->
                  <groupId>com.bernardomg.maven.skins</groupId>
                  <artifactId>docs-maven-skin</artifactId>
                  <version>${site.skin.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <!-- Build helper -->
            <!-- Adds the generated files to the Maven classpath -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>add-source</id>
                  <goals>
                     <goal>add-source</goal>
                  </goals>
                  <configuration>
                     <sources>
                        <!-- JPA meta-model -->
                        <source>${project.build.directory}/generated-sources/apt</source>
                     </sources>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Maven processor -->
            <!-- Processes Java annotations -->
            <groupId>org.bsc.maven</groupId>
            <artifactId>maven-processor-plugin</artifactId>
            <version>${plugin.processor.version}</version>
            <executions>
               <execution>
                  <id>generate-metamodel</id>
                  <goals>
                     <goal>process</goal>
                  </goals>
                  <phase>generate-sources</phase>
                  <configuration>
                     <processors>
                        <processor>org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor</processor>
                     </processors>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <!-- Resources -->
            <!-- Handles the project resources. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
               <!-- Variables to to override will be delimited with a @. -->
               <!-- This avoids collisions with Spring variables. -->
               <!-- So instead of replacing ${project.name} Maven will replace @project.name@. -->
               <useDefaultDelimiters>false</useDefaultDelimiters>
               <delimiters>
                  <delimiter>@</delimiter>
               </delimiters>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
